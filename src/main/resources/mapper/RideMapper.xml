<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cssa.wxcloudrun.dao.RideMapper">

    <select id="getRide" parameterType="Integer" resultType="org.cssa.wxcloudrun.model.Ride">
        SELECT ride.rideId,
               ride.userId,
               ride.requestType,
               ride.rideType,
               ride.price,
               ride.origin,
               ride.destination,
               ride.availableSeats,
               ride.requestedSeats,
               ride.departure_time AS departureTime,
               ride.return_time AS returnTime,
               ride.description,
               ride.contactInfoJSON,
               ride.make,
               ride.model,
               ride.estimated_arrival_time AS estimatedArrivalTime,
               ride.removed_time AS removedTime,
               ride.published_time AS publishedTime,
               ride.imagesJSON
        FROM ride
        WHERE ride.rideId = #{rideId}
    </select>

    <select id="getRideList" parameterType="java.util.Map" resultType="org.cssa.wxcloudrun.model.Ride">
        SELECT ride.rideId,
               ride.userId,
               ride.requestType,
               ride.rideType,
               ride.price,
               ride.origin,
               ride.destination,
               ride.availableSeats,
               ride.requestedSeats,
               ride.departure_time AS departureTime,
               ride.return_time AS returnTime,
               ride.description,
               ride.contactInfoJSON,
               ride.make,
               ride.model,
               ride.estimated_arrival_time AS estimatedArrivalTime,
               ride.removed_time AS removedTime,
               ride.published_time AS publishedTime,
               ride.imagesJSON
        FROM ride
        WHERE ride.removed_time IS NULL
        LIMIT #{offset}, #{limit}
    </select>

    <select id="isRideOwnedByUser" parameterType="java.util.Map" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM ride
        WHERE userId = #{userId} AND rideId = #{rideId}
    </select>

    <select id="getRemovedRideList" parameterType="java.util.Map" resultType="org.cssa.wxcloudrun.model.Ride">
        SELECT *
        FROM ride
        WHERE userId = #{userId} AND removed_time IS NOT NULL
        LIMIT #{offset}, #{limit}
    </select>

    <insert id="publishRide" parameterType="org.cssa.wxcloudrun.model.Ride" useGeneratedKeys="true" keyProperty="rideId">
        INSERT INTO ride (userId, rideType, price, origin, destination, description, availableSeats, requestedSeats,
                          departure_time, return_time, contactInfoJSON, make, model, estimated_arrival_time, imagesJSON,
                          published_time)
        VALUES (#{userId}, #{rideType}, #{price}, #{origin}, #{destination}, #{description}, #{availableSeats},
                #{requestedSeats}, #{departureTime}, #{returnTime}, #{contactInfoJSON}, #{make}, #{model},
                #{estimatedArrivalTime}, #{imagesJSON}, CONVERT_TZ(UTC_TIMESTAMP(), '+00:00', 'America/Chicago'))
    </insert>

    <update id="updateRide" parameterType="java.util.Map">
        UPDATE ride
        SET rideType = #{ride.rideType},
        price = #{ride.price},
        origin = #{ride.origin},
        destination = #{ride.destination},
        description = #{ride.description},
        availableSeats = #{ride.availableSeats},
        requestedSeats = #{ride.requestedSeats},
        departure_time = #{ride.departureTime},
        return_time = #{ride.returnTime},
        contactInfoJSON = #{ride.contactInfoJSON},
        make = #{ride.make},
        model = #{ride.model},
        estimated_arrival_time = #{ride.estimatedArrivalTime},
        imagesJSON = #{ride.imagesJSON}
        <if test="ifToPublish">
            , published_time = CONVERT_TZ(UTC_TIMESTAMP(), '+00:00', 'America/Chicago')
            , removed_time = NULL
        </if>
        WHERE rideId = #{ride.rideId} AND userId = #{userId}
    </update>

    <update id="removeRide" parameterType="Integer">
        UPDATE ride
        SET removed_time = CONVERT_TZ(UTC_TIMESTAMP(), '+00:00', 'America/Chicago')
        WHERE rideId = #{rideId}
    </update>

    <delete id="deleteRide" parameterType="Integer">
        DELETE FROM ride
        WHERE rideId = #{rideId}
    </delete>

    <select id="isPublished" parameterType="Integer" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM ride
        WHERE rideId = #{rideId} AND published_time IS NOT NULL AND removed_time IS NULL
    </select>

</mapper>
