<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cssa.wxcloudrun.dao.RideMapper">

    <!-- 定义 resultMap 映射 Ride 类 -->
    <resultMap id="rideResultMap" type="org.cssa.wxcloudrun.model.Ride">
        <result column="open_id" property="openId" />
        <result column="rideId" property="rideId" />
        <result column="requestType" property="requestType" />
        <result column="rideType" property="rideType" />
        <result column="price" property="price" />
        <result column="origin" property="origin" />
        <result column="destination" property="destination" />
        <result column="availableSeats" property="availableSeats" />
        <result column="requestedSeats" property="requestedSeats" />
        <result column="departureTime" property="departureTime" />
        <result column="returnTime" property="returnTime" />
        <result column="description" property="description" />
        <result column="contactInfoJSON" property="contactInfoJSON" />
        <result column="make" property="make" />
        <result column="model" property="model" />
        <result column="estimatedArrivalTime" property="estimatedArrivalTime" />
        <result column="removedTime" property="removedTime" />
        <result column="publishedTime" property="publishedTime" />
        <result column="imagesJSON" property="imagesJSON" />
    </resultMap>

    <!-- 使用 resultMap 的查询 -->
    <select id="getRide" parameterType="Integer" resultMap="rideResultMap">
        SELECT * FROM ride WHERE rideId = #{rideId}
    </select>

    <select id="getRideList" parameterType="java.util.Map" resultMap="rideResultMap">
        SELECT * FROM ride WHERE removedTime IS NULL LIMIT #{offset}, #{limit}
    </select>

    <select id="getRideListByUserId" parameterType="java.util.Map" resultMap="rideResultMap">
        SELECT * FROM ride WHERE removedTime IS NULL AND open_id = #{openId} LIMIT #{offset}, #{limit}
    </select>

    <select id="isRideOwnedByUser" parameterType="java.util.Map" resultType="boolean">
        SELECT COUNT(*) > 0 FROM ride WHERE open_id = #{openId} AND rideId = #{rideId}
    </select>

    <select id="getRemovedRideList" parameterType="java.util.Map" resultMap="rideResultMap">
        SELECT * FROM ride WHERE open_id = #{openId} AND removedTime IS NOT NULL LIMIT #{offset}, #{limit}
    </select>

    <insert id="publishRide" parameterType="org.cssa.wxcloudrun.model.Ride" useGeneratedKeys="true" keyProperty="rideId">
        INSERT INTO ride (open_id, rideType, price, origin, destination, description, availableSeats, requestedSeats,
                          departureTime, returnTime, contactInfoJSON, make, model, estimatedArrivalTime, imagesJSON,
                          publishedTime)
        VALUES (#{openId}, #{rideType}, #{price}, #{origin}, #{destination}, #{description}, #{availableSeats},
                #{requestedSeats}, #{departureTime}, #{returnTime}, #{contactInfoJSON}, #{make}, #{model},
                #{estimatedArrivalTime}, #{imagesJSON}, CONVERT_TZ(UTC_TIMESTAMP(), '+00:00', 'America/Chicago'))
    </insert>

    <update id="updateRide" parameterType="java.util.Map">
        UPDATE ride
        SET rideType = #{ride.rideType},
        price = #{ride.price},
        origin = #{ride.origin},
        destination = #{ride.destination},
        description = #{ride.description},
        availableSeats = #{ride.availableSeats},
        requestedSeats = #{ride.requestedSeats},
        departureTime = #{ride.departureTime},
        returnTime = #{ride.returnTime},
        contactInfoJSON = #{ride.contactInfoJSON},
        make = #{ride.make},
        model = #{ride.model},
        estimatedArrivalTime = #{ride.estimatedArrivalTime},
        imagesJSON = #{ride.imagesJSON}
        <if test="ifToPublish">
            , publishedTime = CONVERT_TZ(UTC_TIMESTAMP(), '+00:00', 'America/Chicago')
            , removedTime = NULL
        </if>
        WHERE rideId = #{ride.rideId} AND open_id = #{openId}
    </update>

    <update id="removeRide" parameterType="Integer">
        UPDATE ride
        SET removedTime = CONVERT_TZ(UTC_TIMESTAMP(), '+00:00', 'America/Chicago'),
            publishedTime = NULL
        WHERE rideId = #{rideId}
    </update>

    <delete id="deleteRide" parameterType="Integer">
        DELETE FROM ride WHERE rideId = #{rideId}
    </delete>

    <select id="isPublished" parameterType="Integer" resultType="boolean">
        SELECT COUNT(*) > 0 FROM ride WHERE rideId = #{rideId} AND publishedTime IS NOT NULL AND removedTime IS NULL
    </select>
</mapper>
