<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tencent.wxcloudrun.dao.RentalMapper">

    <select id="getAllRentalList" resultType="Rental">
        SELECT rental.userID, user.avatar AS sellerAvatar, user.nickname AS sellerNickname, rentalID, sexConstraint, floorPlan, description, publishedTime, rentalStartTime, rentalEndTime, price, location, contact, imagesJSON
        FROM rental JOIN user ON rental.userID = user.userID
        SELECT userID, rentalID, sexConstraint, floorPlan, description, publishedTime, rentalStartTime, rentalEndTime, price, location, contact, imagesJSON
        FROM rental
        WHERE rentalID >= #{offset}
        ORDER BY rental.rentalID
            LIMIT #{limit}
    </select>

    <select id="getRentalList" resultType="Rental">
        SELECT userID, rentalID, sexConstraint, floorPlan, description, publishedTime, rentalStartTime, rentalEndTime, price, location, contact, imagesJSON
        FROM rental
        WHERE rentalID >= #{offset}
        ORDER BY rental.rentalID
        LIMIT #{limit}
        <foreach item="floorPlan" collection="floorPlanList" separator="," open="(" close=")" index="index">
            #{floorPlan}
        </foreach> AND price &lt;= #{price} AND rentalStartTime>=#{startTime} AND rentalEndTime &lt;= #{endTime}
    </select>

    <select id="getRentalByID" resultType="Rental">
        SELECT userID, rentalID, sexConstraint, floorPlan, description, publishedTime, rentalStartTime, rentalEndTime, price, location, contact, imagesJSON
        FROM rental WHERE rentalID in
        <foreach item="rental" collection="rentalID" separator="," open="(" close=")" index="index">
            #{rental}
        </foreach>
    </select>

    <insert id="postRentalInfo" parameterType="Rental">
        INSERT INTO rental (userID,rentalID,sexConstraint,floorPlan,description,publishedTime,rentalStartTime,rentalEndTime,price,location,contact,imagesJSON)
        VALUES (#{userID},#{rentalID},#{sexConstraint},#{floorPlan},#{description},#{publishedTime},#{rentalStartTime},#{rentalEndTime}, #{price}, #{location}, #{contact}, #{imagesJSON})
    </insert>


    <select id="getRental" parameterType="Map" resultType="Rental">
        SELECT rental.userID, rental.rentalID, rental.sexConstraint, rental.floorPlan, rental.description,
        rental.publishedTime, rental.rentalStartTime, rental.rentalEndTime, rental.price,
        rental.location, rental.contact, rental.imagesJSON,
        user.avatar as sellerAvatar, user.nickname as sellerNickname
        FROM rental
        INNER JOIN user on rental.userID = user.userID
        WHERE rental.price &lt;= #{priceLimit}
            AND rental.floorPlan in
            <foreach item="floorplan" collection="floorplanList" separator="," open="(" close=")" index="index">
                #{floorplan}
            </foreach>
        ORDER BY rental.publishedTime DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getRentalTimed" parameterType="Map" resultType="Rental">
        SELECT rental.userID, rental.rentalID, rental.sexConstraint, rental.floorPlan, rental.description,
               rental.publishedTime, rental.rentalStartTime, rental.rentalEndTime, rental.price,
               rental.location, rental.contact, rental.imagesJSON,
               user.avatar as sellerAvatar, user.nickname as sellerNickname
        FROM rental
        INNER JOIN user on rental.userID = user.userID
        WHERE rental.price &lt;= #{priceLimit}
              AND rental.rentalStartTime &lt;= Date_ADD(#{startTime}, INTERVAL 5 DAY) AND rental.rentalStartTime &gt;= Date_SUB(#{startTime}, INTERVAL 5 DAY)
              AND rental.rentalEndTime &lt;= Date_ADD(#{endTime}, INTERVAL 5 DAY) AND rental.rentalEndTime &gt;= Date_SUB(#{endTime}, INTERVAL 5 DAY)
              AND rental.rentalID >= #{offset}
              AND rental.floorPlan in
            <foreach item="floorplan" collection="floorplanList" separator="," open="(" close=")" index="index">
                #{floorplan}
            </foreach>
        ORDER BY rental.publishedTime DESC
        LIMIT #{offset}, #{limit}
    </select>


    <update id="updateRentalSavedList" parameterType="User">
        UPDATE user
        SET savedRentalJSON = #{savedRentalJSON}
        WHERE userID = #{userID}
    </update>

    <update id="saveContact">
        UPDATE user SET wechatID = #{contact} WHERE userID = #{userID}
    </update>

    <select id="getRentalSavedList" resultType="User">
        SELECT userID, savedRentalJSON FROM user WHERE userID = #{userID}
    </select>

</mapper>
